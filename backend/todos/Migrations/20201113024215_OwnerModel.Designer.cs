// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using todos;

namespace todos.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20201113024215_OwnerModel")]
    partial class OwnerModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("todos.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mr. Handyman"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sarah"
                        });
                });

            modelBuilder.Entity("todos.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Remodel Bathroom",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clean out bedroom",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Text Mom",
                            OwnerId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fix front doorstep",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Listen to .NET Rocks! podcast",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Water plants",
                            OwnerId = 2
                        });
                });

            modelBuilder.Entity("todos.Models.Todo", b =>
                {
                    b.HasOne("todos.Models.Owner", "Owner")
                        .WithMany("Todos")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("todos.Models.Owner", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
